
// +gobra

package select_channel_error

// hashFNV1a returns a hash value for the given initial state combined with the given byte.
// To get a hash for a sequence of bytes, invoke for each byte, passing the returned value
// of one call as the state for the next. Example. s1 = hashFNV1a(fnv1aOffset, byte1)
// s2 = hashFNV1a(s1, byte2) etc. It is valid and recommended to use a value obtained
// from calla to hashFNV1a() as the initial state rather than fnv1aOffset32 itself.
func hashFNV1a(state uint32, c byte) uint32 {
	const prime32 = 16777619
	return (state ^ uint32(c)) * prime32
}
